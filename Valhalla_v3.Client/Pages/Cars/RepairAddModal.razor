@inject NavigationManager navigation
@inject HttpClient Http

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">
        @ErrorMessage
    </div>
}


<EditForm Model="@formModel" OnValidSubmit=HandleValidMechanicSubmit>
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Cost" class="form-label">Koszt</label>
        <InputNumber id="Cost" class="form-control" @bind-Value="formModel.Cost" ParsingErrorMessage="Koszt musi być liczbą" />
        <ValidationMessage For="@(() => formModel.Cost)" />
    </div>
    <div class="mb-3">
        <label for="Mileage" class="form-label">Przebieg</label>
        <InputNumber id="Mileage" class="form-control" @bind-Value="formModel.Mileage" ParsingErrorMessage="Przebieg musi być liczbą" />
        <ValidationMessage For="@(() => formModel.Mileage)" />
    </div>
    <div class="mb-3">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="OilService" @bind="formModel.ServiceOil">
            <label class="form-check-label" for="OilService">
                Serwis olejowy
            </label>
        </div>
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Opis</label>
        <InputTextArea id="Description" class="form-control" @bind-Value="formModel.Description" />
        <ValidationMessage For="@(() => formModel.Description)" />
    </div>
    <div class="mb-3">
        <label for="Mechanic" class="form-label">Mechanik</label>
        <InputSelect id="Mechanic" class="form-control" @bind-Value="formModel.MechanicId">
            <option selected value="">Wybierz mechanika</option>
            @foreach (var mechanic in ListMechanic)
            {
                if (formModel.MechanicId == mechanic.Id)
                {
                    <option Selected value="@mechanic.Id">@mechanic.Name</option>
                }
                else
                {
                    <option value="@mechanic.Id">@mechanic.Name</option>
                }
            }
        </InputSelect>
        <ValidationMessage For="@(() => formModel.MechanicId)" />
    </div>
    <div class="d-flex justify-content-between">
        <button class="btn btn-primary w-25" type="submit">Zapisz</button>
        <button class="btn btn-primary w-25" @onclick="OpenStation">Dodaj mechanika</button>
    </div>
</EditForm>
<div class="modal fade @(isMechanicOpen ? "show" : "")" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="display:@(isMechanicOpen ? "block" : "none");">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header modal-header-moje">
                <h5 class="modal-title" id="exampleModalLabel">Mechanik</h5>
                <button type="button" class="btn-close" @onclick="CloseStation"></button>
            </div>
            <div class="modal-body modal-body-moje">
                <MechanicAddModal OnFormStationSubmit="HandleMechanicSubmit" />
            </div>
        </div>
    </div>
</div>